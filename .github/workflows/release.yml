name: Build and Release Golang App

on:
  push:
    tags:
      - 'v*.*.*'  # El flujo de trabajo se ejecutar√° cuando haya un push con una etiqueta que siga el formato vX.X.X (por ejemplo, v1.0.0)

jobs:
  build:
    name: Build for AWS r6gd.medium
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
        goarm: [""]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build binary
        env:
          GOOS: "${{ matrix.goos }}"
          GOARCH: "${{ matrix.goarch }}"
        run: |
          mkdir -p dist
          go build -o dist/compare_versions_${{ matrix.goos }}_${{ matrix.goarch }} .

      - name: List files in dist directory
        run: ls -la dist

      - name: Archive binary
        run: tar -czvf "dist/compare_versions_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz" -C dist "compare_versions_${{ matrix.goos }}_${{ matrix.goarch }}"

      - name: List files after archiving
        run: ls -la dist

      - name: Upload the Rodeo binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: ./dist/*.tar.gz
          file_glob: true
